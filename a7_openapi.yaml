openapi: 3.0.0
info:
  title: 4NSWERS API
  description: Comprehensive API for the collaborative Q&A platform "4NSWERS".
  version: 1.0.0
servers:
  - url: http://127.0.0.1:8000
    description: Local Development Server

tags:
  - name: "M01: Authentication"
  - name: "M02: Home and Navigation"
  - name: "M03: Questions Management"
  - name: "M04: Answers Management"
  - name: "M05: User Profiles"
  - name: "M06: Search"
  - name: "M07: Voting System"

paths:
  /search:
    get:
      summary: "Search Questions"
      description: "Search for questions using a query string. Access: PUB"
      tags:
        - "M06: Search"
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: "The search term to query questions by title or content."
      responses:
        '200':
          description: "A list of questions that match the search query."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Question"

  /login:
    get:
      summary: "Login Form"
      description: "Provide login form. Access: PUB"
      tags:
        - "M01: Authentication"
      responses:
        '200':
          description: "OK. Show Login UI"
    post:
      summary: "Login Action"
      description: "Process the login form. Access: PUB"
      tags:
        - "M01: Authentication"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '302':
          description: "Redirect after login."
          headers:
            Location:
              schema:
                type: string

  /register:
    get:
      summary: "Registration Form"
      description: "Provide user registration form. Access: PUB"
      tags:
        - "M01: Authentication"
      responses:
        '200':
          description: "OK. Show Registration UI"
    post:
      summary: "Register Action"
      description: "Process the registration form. Access: PUB"
      tags:
        - "M01: Authentication"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - email
                - password
      responses:
        '302':
          description: "Redirect after registration."
          headers:
            Location:
              schema:
                type: string

  /users/{id}:
    get:
      summary: "View User Profile"
      description: "Retrieve user profile by ID. Access: OWN, ADM"
      tags:
        - "M05: User Profiles"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "User Profile"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    patch:
      summary: "Edit User Profile"
      description: "Edit profile of the user. Access: OWN"
      tags:
        - "M05: User Profiles"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdate"
      responses:
        '200':
          description: "User profile updated."
    delete:
      summary: "Delete User"
      description: "Delete the user account. Access: OWN, ADM"
      tags:
        - "M05: User Profiles"
      responses:
        '204':
          description: "User deleted."

  /questions:
    get:
      summary: "Get Questions"
      description: "Retrieve all active questions. Access: PUB"
      tags:
        - "M03: Questions Management"
      parameters:
        - in: query
          name: tag
          schema:
            type: string
          description: "Filter by tag"
        - in: query
          name: urgency
          schema:
            type: string
          description: "Filter by urgency level"
      responses:
        '200':
          description: "List of questions"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Question"
    post:
      summary: "Create Question"
      description: "Submit a new question. Access: USR"
      tags:
        - "M03: Questions Management"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionCreate"
      responses:
        '201':
          description: "Question created successfully."

  /questions/{id}:
    get:
      summary: "View Question"
      description: "Retrieve details of a question by ID. Access: PUB"
      tags:
        - "M03: Questions Management"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Question details"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Question"
    patch:
      summary: "Edit Question"
      description: "Edit details of a question. Access: OWN"
      tags:
        - "M03: Questions Management"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionUpdate"
      responses:
        '200':
          description: "Question updated."
    delete:
      summary: "Delete Question"
      description: "Delete a question. Access: OWN, ADM"
      tags:
        - "M03: Questions Management"
      responses:
        '204':
          description: "Question deleted."

  /answers:
    post:
      summary: "Submit an Answer"
      description: "Post a new answer to a question. Access: USR"
      tags:
        - "M04: Answers Management"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnswerCreate"
      responses:
        '201':
          description: "Answer submitted."

  /answers/{id}:
    get:
      summary: "View Answer"
      description: "Retrieve details of an answer by ID. Access: PUB"
      tags:
        - "M04: Answers Management"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Answer details"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Answer"
    patch:
      summary: "Edit Answer"
      description: "Edit details of an answer. Access: OWN"
      tags:
        - "M04: Answers Management"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnswerUpdate"
      responses:
        '200':
          description: "Answer updated."
    delete:
      summary: "Delete Answer"
      description: "Delete an answer. Access: OWN, ADM"
      tags:
        - "M04: Answers Management"
      responses:
        '204':
          description: "Answer deleted."

  /vote:
    post:
      summary: "Vote on an Answer"
      description: "Submit a vote for an answer. Access: USR"
      tags:
        - "M07: Voting System"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VoteCreate"
      responses:
        '200':
          description: "Vote submitted successfully."

  /vote/{id}:
    delete:
      summary: "Remove Vote"
      description: "Remove a vote from an answer. Access: USR"
      tags:
        - "M07: Voting System"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: "Vote removed."


components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string

    UserUpdate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string

    Question:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        body:
          type: string
        urgency:
          type: string
        tags:
          type: array
          items:
            type: string

    QuestionCreate:
      type: object
      required:
        - title
        - body
      properties:
        title:
          type: string
        body:
          type: string
        tags:
          type: array
          items:
            type: string

    Answer:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        question_id:
          type: integer

    AnswerCreate:
      type: object
      required:
        - body
        - question_id
      properties:
        body:
          type: string
        question_id:
          type: integer
    
